name: Spectral Checks

on:
  pull_request:
  push:
    paths:
      - 'src/**'
      - 'example/**'
      - '__tests__/**'
      - '.spectral.yaml'
      - '*.oas.rules.*'
      - 'package.json'
      - 'tsconfig.json'
      - 'jest.config.*'
    branches:
      - main

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      contents: read
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      run_ci: ${{ steps.filter.outputs.ci }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ci:
              - 'src/**'
              - 'example/**'
              - '__tests__/**'
              - '.spectral.yaml'
              - '*.oas.rules.*'
              - 'package.json'
              - 'tsconfig.json'
              - 'jest.config.*'

  lint-example-openapi:
    name: Lint Example OpenAPI
    needs: changes
    if: ${{ needs.changes.outputs.run_ci == 'true' }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Spectral
        run: curl -L https://raw.github.com/stoplightio/spectral/master/scripts/install.sh | sh

      - name: Lint example OpenAPI
        run: |
          spectral --version
          spectral lint "./example/*.{json,yml,yaml}" -f github-actions

  run-typescript-tests:
    name: Run TypeScript Tests
    needs: changes
    if: ${{ needs.changes.outputs.run_ci == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript tests with coverage
        run: npm run test -- --coverage

      - name: Upload Jest coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
